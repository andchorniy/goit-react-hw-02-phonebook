{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleInputChange","e","currentTarget","value","setState","addContact","preventDefault","props","onSubmit","this","className","style","form","label","input","type","pattern","title","required","onChange","btn","Component","Contact","id","deleteHandler","onClick","ContactList","contacts","list","map","contact","item","Filter","filter","handleChange","App","handleFilterChange","filterContacts","regExp","RegExp","test","find","alert","newContact","uuidv4","deleteContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39153379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3uknQ\",\"label\":\"ContactForm_label__285Ka\",\"input\":\"ContactForm_input__3MMOy\",\"btn\":\"ContactForm_btn__22vHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2l5j0\",\"item\":\"ContactList_item__wwbY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1R9Cd\",\"input\":\"Filter_input__2fwha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contact_btn__2EzVF\"};","import { Component } from \"react\";\r\nimport style from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE ={\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\nclass ContactForm extends Component   {\r\n    state = {\r\n        ...INITIAL_STATE\r\n    }\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    addContact = (e) => {\r\n        e.preventDefault();\r\n          this.props.onSubmit(e.currentTarget.name.value, e.currentTarget.number.value)\r\n          this.setState({\r\n            ...INITIAL_STATE\r\n        })\r\n      }\r\n    \r\n    render(){\r\n        const {name, number} = this.state\r\n        return (\r\n\r\n                <form onSubmit={this.addContact} className={style.form} >\r\n                    <label  className={style.label}>\r\n                        Name\r\n                        <input\r\n                        className={style.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                        />\r\n                    </label>\r\n                    <label className={style.label}>\r\n                        Number\r\n                        <input\r\n                        className={style.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                        />\r\n\r\n                    </label>\r\n                    <button type=\"submit\" className={style.btn}>Add contact</button>\r\n                </form>\r\n        \r\n        )}\r\n    \r\n};\r\n\r\nexport default ContactForm;","import\tstyle from './Contact.module.css'\r\nconst Contact = ({name, number, id, deleteHandler}) => {\r\n    return (\r\n        <>\r\n            {name} {number}\r\n            <button className={style.btn} onClick={deleteHandler} id={id}>Delete</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contact;","\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css'\r\n\r\nimport Contact from '../Contact'\r\nconst ContactList = ({contacts, deleteHandler}) => {\r\n    return (\r\n        \r\n            <ul className={style.list}>\r\n            {contacts.map((contact)=>{\r\n                return <li className={style.item} key={contact.id}>\r\n                    <Contact name={contact.name} number={contact.number} id={contact.id} deleteHandler={deleteHandler}/>\r\n                    </li>\r\n            })}\r\n\r\n            </ul>\r\n        \r\n    );\r\n};\r\nContactList.propTypes={\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    deleteHandler: PropTypes.func.isRequired,\r\n}\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport style from './Filter.module.css'\r\nconst Filter = ({filter, handleChange}) => {\r\n    return (\r\n        <div>\r\n            <label className={style.label}>\r\n                Find contacts by name\r\n                <input className={style.input} type=\"text\" name=\"filter\" value={filter} onChange={handleChange}/>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes={\r\n    filter: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  handleFilterChange = (e) => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const regExp = new RegExp(filter, \"gi\");\n    return contacts.filter((contact) => regExp.test(contact.name));\n  };\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts `);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name: name,\n        number: number,\n      };\n      this.setState({\n        contacts: [...this.state.contacts, newContact],\n      });\n    }\n  };\n  deleteContact = (e) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== e.currentTarget.id),\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          handleChange={this.handleFilterChange}\n        />\n        <ContactList\n          contacts={this.filterContacts()}\n          deleteHandler={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}